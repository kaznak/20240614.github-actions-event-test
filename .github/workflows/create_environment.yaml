name: Create Environment

on:
  workflow_dispatch:
    inputs:
      token:
        type: string
        default: ${{ github.token }}
      env-name:
        type: string
        required: true
      env-vars:
        type: string
        description: JSON map for environment variables
        default: '{}'
      env-secrets:
        type: string
        description: JSON map for secret variables
        default: '{}'
  # pull_request_target:
  #   types:
  #     - opened
  #     - reopened
  workflow_call:
    inputs:
      token:
        type: string
        default: ${{ github.token }}
      env-name:
        type: string
        required: true
      env-vars:
        type: string
        description: JSON map for environment variables
        default: '{}'
      env-secrets:
        type: string
        description: JSON map for secret variables
        default: '{}'

jobs:
  dump_contexts:
    runs-on: ubuntu-22.04
    steps:
        - run: env
        - name: toJSON(inputs)
          run: echo '${{ toJSON(inputs) }}'
        - name: toJSON(github)
          run: echo '${{ toJSON(github) }}'
        - name: toJSON(env)
          run: echo '${{ toJSON(env) }}'
        - name: toJSON(vars)
          run: echo '${{ toJSON(vars) }}'
        - name: toJSON(secrets)
          run: echo '${{ toJSON(secrets) }}'
        - name: toJSON(job)
          run: echo '${{ toJSON(job) }}'
        - name: toJSON(steps)
          run: echo '${{ toJSON(steps) }}'
        - name: toJSON(runner)
          run: echo '${{ toJSON(runner) }}'
        - name: toJSON(strategy)
          run: echo '${{ toJSON(strategy) }}'
        - name: toJSON(matrix)
          run: echo '${{ toJSON(matrix) }}'
        - name: toJSON(needs)
          run: echo '${{ toJSON(needs) }}'
        - run: gh version

  createEnvironment:
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ inputs.token }}
      ENV_NAME: ${{ inputs.env-name }}
      VARIABLES: ${{ inputs.env-vars }}
      SECRETS: ${{ inputs.env-secrets }}
    steps:
      - uses: actions/setup-node@v4
      
      - name: create environment
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${GITHUB_REPOSITORY}/environments/${ENV_NAME}"

      - name: set environment variables
        run: |
          echo "$VARIABLES"  \
          | jq -r 'to_entries|.[]|"
            gh api \\
              --method POST \\
              -H \"Accept: application/vnd.github+json\" \\
              -H \"X-GitHub-Api-Version: 2022-11-28\" \\
              \"/repos/${GITHUB_REPOSITORY}/environments/${ENV_NAME}/variables\" \\
                -f \"name=\(.key)\" -f \"value=\(.value)\"
            "'  \
          | bash -vx

      - name: get environment public key
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${GITHUB_REPOSITORY}/environments/${ENV_NAME}/secrets/public-key"  \
          | jq -r '"key_id=\(.key_id)\nkey=\(.key)"'  \
          | tee -a $GITHUB_ENV
 
      - name: set environment secrets
        env:
          SECRET_ENCRYPTION_KEY_ID: ${{ env.key_id }}
          SECRET_ENCRYPTION_KEY: ${{ env.key }}
        run: |
          echo "$SECRETS"  \
          | node .github/scripts/encode-json "${SECRET_ENCRYPTION_KEY}" \
          | jq -r 'to_entries|.[]|"
            gh api \\
              --method POST \\
              -H \"Accept: application/vnd.github+json\" \\
              -H \"X-GitHub-Api-Version: 2022-11-28\" \\
                \"/repos/${GITHUB_REPOSITORY}/environments/${ENV_NAME}/secrets/\(.key)\" \\
              -f \"encrypted_value=\(.value)\"  \\
              -f \"key_id=${SECRET_ENCRYPTION_KEY_ID}\"
            "'  \
          | bash -vx
 
